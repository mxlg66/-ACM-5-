#include<iostream>
#include<algorithm>
#include<stdio.h>
#include<iostream>
#include<stdio.h>
#include<string.h>
using namespace std;
int dp[1001][2001];
const int INF = 0x7ffffff;//0x7fffffff代表int的最大值
int list[2001];
int main()
{  int n, k;
    while (scanf("%d %d", &n, &k) != EOF)
    {
        for (int i = 1; i <= n; i++)
        {
            scanf("%d", &list[i]);
        }

        sort(list + 1, list + 1 + n);
        for (int i = 1; i <= n; i++)
        {
            dp[0][i] = 0;     
        }

        for (int i = 1; i <= k; i++)
            for (int j = i * 2; j <= n; j++)
            {
                if (j > i * 2)
                    dp[i][j] = dp[i][j - 1];    
                else
                    dp[i][j] = INF;           

                if (dp[i][j] > dp[i - 1][j - 2] + (list[j] - list[j - 1]) * (list[j] - list[j - 1]))
                    dp[i][j] = dp[i - 1][j - 2] + (list[j] - list[j - 1]) * (list[j] - list[j - 1]);
            }

        printf("%d\n", dp[k][n]);
    }
    return 0;
}
